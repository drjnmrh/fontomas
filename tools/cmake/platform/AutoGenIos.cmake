# AutoGen CMake scripts.
# Copyright (C) 2019  O.Z.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

macro(AG_Platform_Init)
    set(CMAKE_XCODE_ATTRIBUTE_DEVELOPMENT_TEAM $ENV{DEVELOPMENT_TEAM})
    set(CMAKE_XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY $ENV{CODE_SIGN_IDENTITY})

    message(STATUS "Code Sign Identity : ${CMAKE_XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY}")
    message(STATUS "Development Team   : ${CMAKE_XCODE_ATTRIBUTE_DEVELOPMENT_TEAM}")
endmacro()


macro(AG_Platform_GetName outvar)
    set(${outvar} "iOS")
endmacro()


macro(AG_Platform_GetShortName outvar)
    set(${outvar} "ios")
endmacro()


macro(AG_Platform_AddStaticLibrary target)
    add_library(${target} STATIC)
endmacro()


macro(AG_Platform_SetupTargetFlags target)
    set_target_properties(${target} PROPERTIES
        XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
        XCODE_ATTRIBUTE_CLANG_C_LANGUAGE_STANDARD "c99"
        XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY "libc++"
        XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++17"
    )

    target_compile_options(${target} PUBLIC
        $<$<CONFIG:Release>:-Ofast -fno-sanitize=memory
            $<$<COMPILE_LANGUAGE:CXX>:-fno-rtti> >
        $<$<CONFIG:Debug>:-O0> >
        -faligned-new=64
    )

    target_compile_definitions(${target} PRIVATE
        OPENGL_HEADER=<OpenGLES/ES2/gl.h>
    )

    target_compile_definitions(${target} PRIVATE PLATFORM_IOS)
endmacro()


macro(AG_Platform_AddExecutableTarget target itemsvar)
    add_executable(${target} MACOSX_BUNDLE ${${itemsvar}})

    set_target_properties(${target} PROPERTIES MACOSX_BUNDLE TRUE)

    set_target_properties(${target} PROPERTIES
        MACOSX_BUNDLE_EXECUTABLE_NAME ${target}
        MACOSX_BUNDLE_INFO_STRING "An executable, generated by AutoGen"
        MACOSX_BUNDLE_GUI_IDENTIFIER com.ug.${target}
        MACOSX_BUNDLE_BUNDLE_NAME ${target}
        MACOSX_BUNDLE_ICON_FILE ""
        MACOSX_BUNDLE_LONG_VERSION_STRING "${VERMAJOR}.${VERMINOR}.${VERPATCH}"
        MACOSX_BUNDLE_SHORT_VERSION_STRING "${VERMAJOR}.${VERMINOR}.${VERPATCH}"
        MACOSX_BUNDLE_BUNDLE_VERSION "${VERMAJOR}.${VERMINOR}.${VERPATCH}"
        MACOSX_BUNDLE_COPYRIGHT "Copyright O.Z."

        XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY $ENV{CODE_SIGN_IDENTITY}
        XCODE_ATTRIBUTE_DEVELOPMENT_TEAM $ENV{DEVELOPMENT_TEAM}
    )

    target_link_libraries(${target}
        "-framework Foundation"
    )
endmacro()


macro(AG_Platform_LinkTargetToExecutable executable target)
    AG_GetCustomTargetProperty(${target} HEADERSDIR _headersdir)

    target_include_directories(${executable} PRIVATE ${_headersdir})
    target_include_directories(${executable} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/sources)

    target_link_libraries(${executable} ${target})

    AG_GetCustomTargetProperty(${target} LINKED_LIBS _libs)

    foreach(item ${_libs})
        target_link_libraries(${executable} ${item})
    endforeach()
endmacro()


macro(AG_Platform_AddTest testname)
    message(FATAL_ERROR "NOT IMPLEMENTED")
endmacro()


macro(AG_Platform_AddExecutableResources executable datapath)
    message(FATAL_ERROR "NOT IMPLEMENTED")
endmacro()


macro(AG_Platform_LinkUiLibraries target)
    message(FATAL_ERROR "NOT IMPLEMENTED")
endmacro()


# platform/AutoGenIos.cmake
